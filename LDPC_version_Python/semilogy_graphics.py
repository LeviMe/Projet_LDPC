# -*- coding: utf-8 -*-

import numpy as np
import matplotlib.ticker as mticker
import matplotlib.pyplot as plt


X = np.linspace(1, 5.5, 10)
coord_px = np.array([8,22,51,97, 163, 249, 348,474, 604, 728])
vals  = 10**(-coord_px/87)

# refaire l'extraction pour avoir des points plus précis
coord_px2 = np.array([41,55,85, 133, 201, 289, 391, 520, 653, 781])
vals2  = 10**(-(coord_px2-33)/89)


res = np.array(
    [[1.0,0.819672131147541,0.1527920081967213,244,200,4772,277.3031144142151,1.1364881738287504],
[1.5,0.7352941176470589,0.1179055606617647,272,200,4105,290.77086544036865,1.0690105347072376],
[2.0,0.5291005291005291,0.07465277777777778,378,200,3612,242.9979965686798,0.6428518427742852],
[2.5,0.23529411764705882,0.03151654411764706,850,200,3429,305.71127581596375,0.35966032448936913],
[3.0,0.06053268765133172,0.008115163438256658,3304,200,3432,452.7776300907135,0.13703923428895687],
[3.5,0.009820288716488264,0.0011780510409506039,20366,200,3071,1146.4611687660217,0.05629289839762456],
[4.0,0.0007843721689067028,9.528896270702522e-05,254981,200,3110,7789.035847187042,0.03054751470575079]])


res2 = np.array([(1.0, 0.7293447293447294, 0.10000445156695156, 351, 256, 4493, 291.7305603027344, 0.8311411974436876),
(1.5, 0.5256673511293635, 0.06721637577002053, 487, 256, 4190, 330.23771023750305, 0.6781061811858379),
(2.0, 0.26528497409326424, 0.029938471502590675, 965, 256, 3698, 354.38579416275024, 0.36723916493549247),
(2.5, 0.06813947298376365, 0.007502661698163428, 3757, 256, 3608, 568.0312967300415, 0.15119278592761284),
(3.0, 0.013485750408260022, 0.0013725273929305168, 18983, 256, 3335, 1230.0455513000488, 0.06479721599852757),
(3.5, 0.0011808880647274271, 0.00011759148422868636, 216786, 256, 3263, 8124.624694347382, 0.03747762629665837)])

#########################################################################

# nécessité de récupérer subplots pour avoir des commandes plus précises que 
#plt. Les anciennes de plt sont appliquées à ax1.

fig1, ax1 = plt.subplots()
fig1.set_dpi(100)
ax1.semilogy(X,vals, '+-', label = "100 it min*, CCSDS")
ax1.semilogy(X,vals2, '+-', label = "CCSDS v2")
ax1.semilogy(res[:,0], res[:,1],  '+-', label = "100 it min, simulations")
ax1.semilogy(res2[:,0], res2[:,1],  '+-', label = "100 it min corrigé, ")


ax1.yaxis.set_major_locator(mticker.LogLocator(numticks=999))
ax1.yaxis.set_minor_locator(mticker.LogLocator(numticks=999, subs="auto"))
ax1.grid(True, which='both',axis='both',  color='0.75') # niveau de gris 1-> blanc 0-> noir



ax1.legend()

#plt.savefig('results/my_fig.png', dpi=320, transparent=True)




